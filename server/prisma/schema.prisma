generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  name         String
  createdAt    DateTime      @default(now())
  workoutPlans WorkoutPlan[]
  mealPlans    MealPlan[]
}

model WorkoutPlan {
  id        String         @id @default(uuid())
  title     String
  goal      String // e.g., "fat loss", "strength"
  createdAt DateTime       @default(now())
  user      User           @relation(fields: [userId], references: [id])
  userId    String
  entries   WorkoutEntry[]
}

model WorkoutEntry {
  id            String      @id @default(uuid())
  date          DateTime
  exercise      String // e.g., "Bench Press"
  sets          Int
  reps          Int
  weight        Float // lbs or kg
  workoutPlan   WorkoutPlan @relation(fields: [workoutPlanId], references: [id])
  workoutPlanId String
}

model MealPlan {
  id        String      @id @default(uuid())
  title     String
  goal      String // e.g., "low carb", "muscle gain"
  createdAt DateTime    @default(now())
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  meals     MealEntry[]
}

model MealEntry {
  id         String   @id @default(uuid())
  name       String // e.g., "Chicken & Rice"
  calories   Int
  protein    Int
  carbs      Int
  fat        Int
  date       DateTime
  mealPlan   MealPlan @relation(fields: [mealPlanId], references: [id])
  mealPlanId String
}

model Exercise {
  id          String   @id @default(uuid())
  name        String // e.g., "Squat"
  description String? // Optional description
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
